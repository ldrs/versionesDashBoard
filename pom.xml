<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>rd.huma</groupId>
	<artifactId>dashboard</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>dashboard</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<version.wildfly>8.2.0.Final</version.wildfly>
		<version.junit>4.12</version.junit>
		<version.compiler.plugin>3.1</version.compiler.plugin>
		<version.war.plugin>2.5</version.war.plugin>
		<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
		<version.jboss.spec.javaee.7.0>1.0.0.Final</version.jboss.spec.javaee.7.0>
		<version.jboss.bom>8.2.0.Final</version.jboss.bom>
		<version.jersey>2.19</version.jersey>
		<version.resteasy>3.0.11.Final</version.resteasy>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<scope>provided</scope>
			<version>1.5.2</version>
		</dependency>


		<dependency>
	<groupId>com.sun.mail</groupId>
	<artifactId>javax.mail</artifactId>
	<version>1.5.2</version>

		<scope>test</scope>
</dependency>




		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>


		<!-- Import the CDI API, we use provided scope as the API is included in
			JBoss WildFly -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope
			as the API is included in JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Servlet API, we use provided scope as the API is included
			in JBoss WildFly. -->
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in
			JBoss WildFly. -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.wildfly.bom</groupId>
			<artifactId>jboss-javaee-7.0-with-tools</artifactId>
			<version>${version.jboss.bom}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<scope>provided</scope>

		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>jaxrs-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<version>${version.resteasy}</version>
		</dependency>

		<dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-jaxb-provider</artifactId>
		<version>${version.resteasy}</version>
</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.4</version>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>javax.transaction-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${version.jersey}</version>
		</dependency>


		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-jaxb</artifactId>
			<version>${version.jersey}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${version.jersey}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>3.0.11.Final</version>
			<scope>test</scope>
		</dependency>

		<dependency>
    		<groupId>com.github.jsqlparser</groupId>
    		<artifactId>jsqlparser</artifactId>
    		<version>0.9</version>
		</dependency>
	</dependencies>



	<dependencyManagement>
		<dependencies>
			<!-- Define the version of JBoss' Java EE 7 APIs we want to use -->
			<!-- JBoss distributes a complete set of Java EE 7 APIs including a Bill
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
				of artifacts. We use this here so that we always get the correct versions
				of artifacts. Here we use the jboss-javaee-7.0 stack (you can read this as
				the JBoss stack of the Java EE 7 APIs). You can actually use this stack with
				any version of WildFly that implements Java EE 7, not just WildFly 8! -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-7.0</artifactId>
				<version>${version.jboss.spec.javaee.7.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>


		</dependencies>
	</dependencyManagement>

	<build>
		<!-- Set the name of the war, used as the context root when the app is
			deployed. -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${version.wildfly.maven.plugin}</version>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
		</plugins>

		 <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            </resource>
          </resources>

	</build>

	<profiles>
		<profile>
			<id>Produccion</id>
			<activation><activeByDefault>true</activeByDefault></activation>
			<properties>
				<HIBERNATE.DATASOURCE>java:/datasource.dashboard</HIBERNATE.DATASOURCE>
				<HIBERNATE.DIALECTO>org.hibernate.dialect.MySQL5Dialect</HIBERNATE.DIALECTO>
				<HIBERNATE.DDL>update</HIBERNATE.DDL>

			</properties>
			<build></build>
		</profile>
		<profile>
			<id>Desarrollo</id>
			<activation><activeByDefault>false</activeByDefault></activation>
			<properties>
				<HIBERNATE.DATASOURCE>java:jboss/datasources/ExampleDS</HIBERNATE.DATASOURCE>
				<HIBERNATE.DIALECTO>org.hibernate.dialect.HSQLDialect</HIBERNATE.DIALECTO>
				<HIBERNATE.DDL>create-drop</HIBERNATE.DDL>

			</properties>

		</profile>

	</profiles>
</project>
